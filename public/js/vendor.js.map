{"version":3,"sources":["node_modules/auto-reload-brunch/vendor/auto-reload.js"],"names":["WebSocket","window","MozWebSocket","br","brunch","ar","disabled","cacheBuster","url","date","Math","round","Date","now","toString","replace","indexOf","browser","navigator","userAgent","toLowerCase","forceRepaint","reloaders","page","location","reload","stylesheet","slice","call","document","querySelectorAll","filter","link","val","getAttribute","href","forEach","setTimeout","body","offsetHeight","port","host","server","hostname","connect","connection","onmessage","event","message","data","reloader","onerror","readyState","close","onclose"],"mappings":"AAAA,CACA,WACA,GAAAA,WAAAC,OAAAD,WAAAC,OAAAC,aACAC,GAAAF,OAAAG,OAAAH,OAAAG,WACAC,GAAAF,GAAA,eAAAA,GAAA,kBACA,IAAAH,YAAAK,GAAAC,SAAA,CAEA,GAAAC,aAAA,SAAAC,KACA,GAAAC,MAAAC,KAAAC,MAAAC,KAAAC,MAAA,KAAAC,UAEA,OADAN,KAAAA,IAAAO,QAAA,0BAAA,IACAP,KAAAA,IAAAQ,QAAA,MAAA,EAAA,IAAA,KAAA,eAAAP,MAGAQ,QAAAC,UAAAC,UAAAC,cACAC,aAAAhB,GAAAgB,cAAAJ,QAAAD,QAAA,UAAA,GAEAM,WACAC,KAAA,WACAtB,OAAAuB,SAAAC,QAAA,IAGAC,WAAA,cACAC,MACAC,KAAAC,SAAAC,iBAAA,yBACAC,OAAA,SAAAC,MACA,GAAAC,KAAAD,KAAAE,aAAA,kBACA,OAAAF,MAAAG,MAAA,SAAAF,MAEAG,QAAA,SAAAJ,MACAA,KAAAG,KAAA5B,YAAAyB,KAAAG,QAIAd,cAAAgB,WAAA,WAAAR,SAAAS,KAAAC,cAAA,MAGAC,KAAAnC,GAAAmC,MAAA,KACAC,KAAAtC,GAAAuC,QAAAzC,OAAAuB,SAAAmB,UAAA,YAEAC,QAAA,WACA,GAAAC,YAAA,GAAA7C,WAAA,QAAAyC,KAAA,IAAAD,KACAK,YAAAC,UAAA,SAAAC,OACA,IAAA1C,GAAAC,SAAA,CACA,GAAA0C,SAAAD,MAAAE,KACAC,SAAA5B,UAAA0B,UAAA1B,UAAAC,IACA2B,cAEAL,WAAAM,QAAA,WACAN,WAAAO,YAAAP,WAAAQ,SAEAR,WAAAS,QAAA,WACArD,OAAAoC,WAAAO,QAAA,MAGAA;AArDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"public/js/vendor.js","sourcesContent":["/* jshint ignore:start */\n(function() {\n  var WebSocket = window.WebSocket || window.MozWebSocket;\n  var br = window.brunch = (window.brunch || {});\n  var ar = br['auto-reload'] = (br['auto-reload'] || {});\n  if (!WebSocket || ar.disabled) return;\n\n  var cacheBuster = function(url){\n    var date = Math.round(Date.now() / 1000).toString();\n    url = url.replace(/(\\&|\\\\?)cacheBuster=\\d*/, '');\n    return url + (url.indexOf('?') >= 0 ? '&' : '?') +'cacheBuster=' + date;\n  };\n\n  var browser = navigator.userAgent.toLowerCase();\n  var forceRepaint = ar.forceRepaint || browser.indexOf('chrome') > -1;\n\n  var reloaders = {\n    page: function(){\n      window.location.reload(true);\n    },\n\n    stylesheet: function(){\n      [].slice\n        .call(document.querySelectorAll('link[rel=stylesheet]'))\n        .filter(function(link) {\n          var val = link.getAttribute('data-autoreload');\n          return link.href && val != 'false';\n        })\n        .forEach(function(link) {\n          link.href = cacheBuster(link.href);\n        });\n\n      // Hack to force page repaint after 25ms.\n      if (forceRepaint) setTimeout(function() { document.body.offsetHeight; }, 25);\n    }\n  };\n  var port = ar.port || 9485;\n  var host = br.server || window.location.hostname || 'localhost';\n\n  var connect = function(){\n    var connection = new WebSocket('ws://' + host + ':' + port);\n    connection.onmessage = function(event){\n      if (ar.disabled) return;\n      var message = event.data;\n      var reloader = reloaders[message] || reloaders.page;\n      reloader();\n    };\n    connection.onerror = function(){\n      if (connection.readyState) connection.close();\n    };\n    connection.onclose = function(){\n      window.setTimeout(connect, 1000);\n    };\n  };\n  connect();\n})();\n/* jshint ignore:end */"]}